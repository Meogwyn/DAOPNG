==3780== Memcheck, a memory error detector
==3780== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==3780== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==3780== Command: ./main 32
==3780== Parent PID: 2206
==3780== 
==3780== Invalid write of size 1
==3780==    at 0x4847A3C: strcat (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3780==    by 0x10A4AD: append_dstr (util.c:180)
==3780==    by 0x10A957: handle_args (util.c:329)
==3780==    by 0x1091BA: main (main.c:35)
==3780==  Address 0x4b5e4a0 is 0 bytes after a block of size 128 alloc'd
==3780==    at 0x4846CC3: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3780==    by 0x10A490: realloc_dstr (util.c:111)
==3780==    by 0x10A490: dstr_resizer (util.c:107)
==3780==    by 0x10A490: append_dstr (util.c:179)
==3780==    by 0x10A957: handle_args (util.c:329)
==3780==    by 0x1091BA: main (main.c:35)
==3780== 
==3780== Invalid write of size 1
==3780==    at 0x4847A4E: strcat (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3780==    by 0x10A4AD: append_dstr (util.c:180)
==3780==    by 0x10A957: handle_args (util.c:329)
==3780==    by 0x1091BA: main (main.c:35)
==3780==  Address 0x4b5e4b4 is 20 bytes after a block of size 128 alloc'd
==3780==    at 0x4846CC3: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3780==    by 0x10A490: realloc_dstr (util.c:111)
==3780==    by 0x10A490: dstr_resizer (util.c:107)
==3780==    by 0x10A490: append_dstr (util.c:179)
==3780==    by 0x10A957: handle_args (util.c:329)
==3780==    by 0x1091BA: main (main.c:35)
==3780== 
==3780== Invalid read of size 1
==3780==    at 0x4847A24: strcat (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3780==    by 0x10A363: append_dstr (util.c:180)
==3780==    by 0x10A363: fappend_dstr (util.c:170)
==3780==    by 0x10A7C1: add_opt (util.c:294)
==3780==    by 0x10A982: handle_args (util.c:332)
==3780==    by 0x1091BA: main (main.c:35)
==3780==  Address 0x4b5e760 is 0 bytes after a block of size 128 alloc'd
==3780==    at 0x4846CC3: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3780==    by 0x10A347: realloc_dstr (util.c:111)
==3780==    by 0x10A347: dstr_resizer (util.c:107)
==3780==    by 0x10A347: append_dstr (util.c:179)
==3780==    by 0x10A347: fappend_dstr (util.c:170)
==3780==    by 0x10A7C1: add_opt (util.c:294)
==3780==    by 0x10A982: handle_args (util.c:332)
==3780==    by 0x1091BA: main (main.c:35)
==3780== 
==3780== Invalid write of size 1
==3780==    at 0x4847A3C: strcat (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3780==    by 0x10A363: append_dstr (util.c:180)
==3780==    by 0x10A363: fappend_dstr (util.c:170)
==3780==    by 0x10A7C1: add_opt (util.c:294)
==3780==    by 0x10A982: handle_args (util.c:332)
==3780==    by 0x1091BA: main (main.c:35)
==3780==  Address 0x4b5e760 is 0 bytes after a block of size 128 alloc'd
==3780==    at 0x4846CC3: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3780==    by 0x10A347: realloc_dstr (util.c:111)
==3780==    by 0x10A347: dstr_resizer (util.c:107)
==3780==    by 0x10A347: append_dstr (util.c:179)
==3780==    by 0x10A347: fappend_dstr (util.c:170)
==3780==    by 0x10A7C1: add_opt (util.c:294)
==3780==    by 0x10A982: handle_args (util.c:332)
==3780==    by 0x1091BA: main (main.c:35)
==3780== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 192, hi = 44835825000.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==3780==    at 0x58042F5A: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==3780==    by 0x58043087: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==3780==    by 0x5804322B: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==3780==    by 0x5804CF48: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==3780==    by 0x5803B5FA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==3780==    by 0x58039D6E: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==3780==    by 0x5803E62D: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==3780==    by 0x58039018: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==3780==    by 0x1002E87527: ???
==3780==    by 0x1002DA9F2F: ???
==3780==    by 0x1002DA9F17: ???
==3780==    by 0x1002DA9F2F: ???
==3780==    by 0x1C0F: ???
==3780==    by 0x1002009CBF: ???
==3780==    by 0x592A24FF: ???
==3780==    by 0x1F: ???
==3780==    by 0x1002B9A597: ???
==3780==    by 0x1002E86F47: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 3780)
==3780==    at 0x4847A4E: strcat (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3780==    by 0x10A363: append_dstr (util.c:180)
==3780==    by 0x10A363: fappend_dstr (util.c:170)
==3780==    by 0x10A7C1: add_opt (util.c:294)
==3780==    by 0x10A982: handle_args (util.c:332)
==3780==    by 0x1091BA: main (main.c:35)
client stack range: [0x1FFEFFE000 0x1FFF000FFF] client SP: 0x1FFEFFFED8
valgrind stack range: [0x1002CAA000 0x1002DA9FFF] top usage: 10784 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

